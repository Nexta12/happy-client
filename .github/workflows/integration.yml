name: Integration Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      # - name: Run lint
      #   run: npm run lint
      #   continue-on-error: false

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.SEVER_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            set -e

            # export NVM_DIR="$HOME/.nvm"
            # [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This grabs nvm
            # nvm install 18
            # nvm use 18

            echo "Changing directory to /www/wwwroot/client/happies"
            if ! cd /www/wwwroot/client/happies; then
              echo "Failed to change directory as required by me"
              exit 1
            fi

            # echo "Reseting Local Changes"
            #   if ! git reset --hard; then
            #       echo "Failed to reset local changes"
            #       exit 1;
            #   fi

            echo "Pulling latest code from origin/main"
            if ! git pull origin main; then
              echo "Failed to pull latest code"
              exit 1
            fi

            # echo "Removing every built files and cache"
            # if ! npm run cleanup; then
            #     echo "Couldn't run cleanups"
            #     exit 1
            # fi

            echo "Installing dependencies"
            if ! npm install; then
              echo "Couldn't install packages"
              exit 1
            fi

            echo "Cleaning old build folder"
            if ! rm -rf /www/wwwroot/client/happies/dist; then
            echo "Failed to clean the dist folder"
            exit 1
            fi

            echo "Building for production "
            if ! npm run build; then
              echo "Couldn't rebuild application"
              exit 1
            fi
            echo "Start Production server with pm2"
            if ! npm run start; then
              echo "Couldn't Start production with pm2"
              exit 1
            fi
            echo "Deployment successful"
